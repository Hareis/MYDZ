using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MYDZ.DBUtility;
using System.Data;
using MYDZ.Interface.ClientUser;
using MYDZ.Entity;
using MYDZ.Entity.ClientUser;
using System.Data.SqlClient;

namespace MYDZ.Data.SqlServer.ClientUser
{
    internal class ClientUser : IClientUser
    {
        /// <summary>
        /// 往tbClientUser 表中插入一条数据
        /// </summary>
        /// <param name="ClientUser"></param>
        /// <returns></returns>
        public int InsertUser(tbClientUser model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into tbClientUser(");
            strSql.Append("TbUserId,ParentId,UserNick,GenderId,CreditId,TypeId,HasMorePic,ItemImgNum,ItemImgSize,PropImgNum,PropImgSize,AutoRepost,PromotedType,StatusId,LevelId,AlipayBind,Protection,Avatar,LiangPin,SignFoods,HasShop,IsLightning,HasSubStock,GoldenSeller,Subscribe,VerMarket,OnlineGaming,EmailNum,SMSNum,Currency,Validity,InputDate)");
            strSql.Append(" values (");
            strSql.Append("@TbUserId,@ParentId,@UserNick,@GenderId,@CreditId,@TypeId,@HasMorePic,@ItemImgNum,@ItemImgSize,@PropImgNum,@PropImgSize,@AutoRepost,@PromotedType,@StatusId,@LevelId,@AlipayBind,@Protection,@Avatar,@LiangPin,@SignFoods,@HasShop,@IsLightning,@HasSubStock,@GoldenSeller,@Subscribe,@VerMarket,@OnlineGaming,@EmailNum,@SMSNum,@Currency,@Validity,@InputDate)");
            strSql.Append(";select @@IDENTITY");
            SqlParameter[] parameters = {
					new SqlParameter("@TbUserId", SqlDbType.Int,4),
					new SqlParameter("@ParentId", SqlDbType.Int,4),
					new SqlParameter("@UserNick", SqlDbType.VarChar,50),
					new SqlParameter("@GenderId", SqlDbType.Int,4),
					new SqlParameter("@CreditId", SqlDbType.Int,4),
					new SqlParameter("@TypeId", SqlDbType.Int,4),
					new SqlParameter("@HasMorePic", SqlDbType.Bit,1),
					new SqlParameter("@ItemImgNum", SqlDbType.Int,4),
					new SqlParameter("@ItemImgSize", SqlDbType.Int,4),
					new SqlParameter("@PropImgNum", SqlDbType.Int,4),
					new SqlParameter("@PropImgSize", SqlDbType.Int,4),
					new SqlParameter("@AutoRepost", SqlDbType.Bit,1),
					new SqlParameter("@PromotedType", SqlDbType.Bit,1),
					new SqlParameter("@StatusId", SqlDbType.Int,4),
					new SqlParameter("@LevelId", SqlDbType.Int,4),
					new SqlParameter("@AlipayBind", SqlDbType.Bit,1),
					new SqlParameter("@Protection", SqlDbType.Bit,1),
					new SqlParameter("@Avatar", SqlDbType.VarChar,200),
					new SqlParameter("@LiangPin", SqlDbType.Bit,1),
					new SqlParameter("@SignFoods", SqlDbType.Bit,1),
					new SqlParameter("@HasShop", SqlDbType.Bit,1),
					new SqlParameter("@IsLightning", SqlDbType.Bit,1),
					new SqlParameter("@HasSubStock", SqlDbType.Bit,1),
					new SqlParameter("@GoldenSeller", SqlDbType.Bit,1),
					new SqlParameter("@Subscribe", SqlDbType.Bit,1),
					new SqlParameter("@VerMarket", SqlDbType.VarChar,200),
					new SqlParameter("@OnlineGaming", SqlDbType.Bit,1),
					new SqlParameter("@EmailNum", SqlDbType.Int,4),
					new SqlParameter("@SMSNum", SqlDbType.Int,4),
					new SqlParameter("@Currency", SqlDbType.Decimal,9),
					new SqlParameter("@Validity", SqlDbType.DateTime),
					new SqlParameter("@InputDate", SqlDbType.DateTime)};
            parameters[0].Value = model.TbUserId;
            parameters[1].Value = model.ParentId;
            parameters[2].Value = model.UserNick;
            parameters[3].Value = model.Gender.GenderId;
            parameters[4].Value = model.Credit.CreditId;
            parameters[5].Value = model.Type.TypeId;
            parameters[6].Value = model.HasMorePic;
            parameters[7].Value = model.ItemImgNum;
            parameters[8].Value = model.ItemImgSize;
            parameters[9].Value = model.PropImgNum;
            parameters[10].Value = model.PropImgSize;
            parameters[11].Value = model.AutoRepost;
            parameters[12].Value = model.PromotedType;
            parameters[13].Value = model.Status.StatusId;
            parameters[14].Value = model.Level.LevelId;
            parameters[15].Value = model.AlipayBind;
            parameters[16].Value = model.Protection;
            parameters[17].Value = model.Avatar;
            parameters[18].Value = model.LiangPin;
            parameters[19].Value = model.SignFoods;
            parameters[20].Value = model.HasShop;
            parameters[21].Value = model.IsLightning;
            parameters[22].Value = model.HasSubStock;
            parameters[23].Value = model.GoldenSeller;
            parameters[24].Value = model.Subscribe;
            parameters[25].Value = model.VerMarket;
            parameters[26].Value = model.OnlineGaming;
            parameters[27].Value = model.EmailNum;
            parameters[28].Value = model.SMSNum;
            parameters[29].Value = model.Currency;
            parameters[30].Value = model.Validity;
            parameters[31].Value = model.InputDate;

            object obj = DBHelper.ExecuteScalar(CommandType.Text, strSql.ToString(), parameters);
            if (obj == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
        /// <summary>
        /// 更新tbClientUser表中的一条数据
        /// </summary>
        /// <param name="ClientUser"></param>
        /// <returns></returns>
        public bool UpdateUser(tbClientUser model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update tbClientUser set ");
            strSql.Append("TbUserId=@TbUserId,");
            strSql.Append("ParentId=@ParentId,");
            strSql.Append("UserNick=@UserNick,");
            strSql.Append("GenderId=@GenderId,");
            strSql.Append("CreditId=@CreditId,");
            strSql.Append("TypeId=@TypeId,");
            strSql.Append("HasMorePic=@HasMorePic,");
            strSql.Append("ItemImgNum=@ItemImgNum,");
            strSql.Append("ItemImgSize=@ItemImgSize,");
            strSql.Append("PropImgNum=@PropImgNum,");
            strSql.Append("PropImgSize=@PropImgSize,");
            strSql.Append("AutoRepost=@AutoRepost,");
            strSql.Append("PromotedType=@PromotedType,");
            strSql.Append("StatusId=@StatusId,");
            strSql.Append("LevelId=@LevelId,");
            strSql.Append("AlipayBind=@AlipayBind,");
            strSql.Append("Protection=@Protection,");
            strSql.Append("Avatar=@Avatar,");
            strSql.Append("LiangPin=@LiangPin,");
            strSql.Append("SignFoods=@SignFoods,");
            strSql.Append("HasShop=@HasShop,");
            strSql.Append("IsLightning=@IsLightning,");
            strSql.Append("HasSubStock=@HasSubStock,");
            strSql.Append("GoldenSeller=@GoldenSeller,");
            strSql.Append("Subscribe=@Subscribe,");
            strSql.Append("VerMarket=@VerMarket,");
            strSql.Append("OnlineGaming=@OnlineGaming,");
            strSql.Append("EmailNum=@EmailNum,");
            strSql.Append("SMSNum=@SMSNum,");
            strSql.Append("Currency=@Currency,");
            strSql.Append("Validity=@Validity,");
            strSql.Append("InputDate=@InputDate");
            strSql.Append(" where UserId=@UserId");
            SqlParameter[] parameters = {
					new SqlParameter("@TbUserId", SqlDbType.Int,4),
					new SqlParameter("@ParentId", SqlDbType.Int,4),
					new SqlParameter("@UserNick", SqlDbType.VarChar,50),
					new SqlParameter("@GenderId", SqlDbType.Int,4),
					new SqlParameter("@CreditId", SqlDbType.Int,4),
					new SqlParameter("@TypeId", SqlDbType.Int,4),
					new SqlParameter("@HasMorePic", SqlDbType.Bit,1),
					new SqlParameter("@ItemImgNum", SqlDbType.Int,4),
					new SqlParameter("@ItemImgSize", SqlDbType.Int,4),
					new SqlParameter("@PropImgNum", SqlDbType.Int,4),
					new SqlParameter("@PropImgSize", SqlDbType.Int,4),
					new SqlParameter("@AutoRepost", SqlDbType.Bit,1),
					new SqlParameter("@PromotedType", SqlDbType.Bit,1),
					new SqlParameter("@StatusId", SqlDbType.Int,4),
					new SqlParameter("@LevelId", SqlDbType.Int,4),
					new SqlParameter("@AlipayBind", SqlDbType.Bit,1),
					new SqlParameter("@Protection", SqlDbType.Bit,1),
					new SqlParameter("@Avatar", SqlDbType.VarChar,200),
					new SqlParameter("@LiangPin", SqlDbType.Bit,1),
					new SqlParameter("@SignFoods", SqlDbType.Bit,1),
					new SqlParameter("@HasShop", SqlDbType.Bit,1),
					new SqlParameter("@IsLightning", SqlDbType.Bit,1),
					new SqlParameter("@HasSubStock", SqlDbType.Bit,1),
					new SqlParameter("@GoldenSeller", SqlDbType.Bit,1),
					new SqlParameter("@Subscribe", SqlDbType.Bit,1),
					new SqlParameter("@VerMarket", SqlDbType.VarChar,200),
					new SqlParameter("@OnlineGaming", SqlDbType.Bit,1),
					new SqlParameter("@EmailNum", SqlDbType.Int,4),
					new SqlParameter("@SMSNum", SqlDbType.Int,4),
					new SqlParameter("@Currency", SqlDbType.Decimal,9),
					new SqlParameter("@Validity", SqlDbType.DateTime),
					new SqlParameter("@InputDate", SqlDbType.DateTime),
					new SqlParameter("@UserId", SqlDbType.Int,4)};
            parameters[0].Value = model.TbUserId;
            parameters[1].Value = model.ParentId;
            parameters[2].Value = model.UserNick;
            parameters[3].Value = model.Gender.GenderId;
            parameters[4].Value = model.Credit.CreditId;
            parameters[5].Value = model.Type.TypeId;
            parameters[6].Value = model.HasMorePic;
            parameters[7].Value = model.ItemImgNum;
            parameters[8].Value = model.ItemImgSize;
            parameters[9].Value = model.PropImgNum;
            parameters[10].Value = model.PropImgSize;
            parameters[11].Value = model.AutoRepost;
            parameters[12].Value = model.PromotedType;
            parameters[13].Value = model.Status.StatusId;
            parameters[14].Value = model.Level.LevelId;
            parameters[15].Value = model.AlipayBind;
            parameters[16].Value = model.Protection;
            parameters[17].Value = model.Avatar;
            parameters[18].Value = model.LiangPin;
            parameters[19].Value = model.SignFoods;
            parameters[20].Value = model.HasShop;
            parameters[21].Value = model.IsLightning;
            parameters[22].Value = model.HasSubStock;
            parameters[23].Value = model.GoldenSeller;
            parameters[24].Value = model.Subscribe;
            parameters[25].Value = model.VerMarket;
            parameters[26].Value = model.OnlineGaming;
            parameters[27].Value = model.EmailNum;
            parameters[28].Value = model.SMSNum;
            parameters[29].Value = model.Currency;
            parameters[30].Value = model.Validity;
            parameters[31].Value = model.InputDate.ToLocalTime();
            parameters[32].Value = model.UserId;

            int rows = DBHelper.ExecuteNonQuery(CommandType.Text, strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 查询tbClientUser 中是否已经存在该用户
        /// </summary>
        /// <param name="UserId"></param>
        /// <returns></returns>
        public tbClientUser ExitisUser(string TBUserId, string UserNick)
        {
            string SqlStr = string.Format(@"select [UserId]
                                            ,[TbUserId],[ParentId],[UserNick],[GenderId],[CreditId]
                                            ,[TypeId],[HasMorePic],[ItemImgNum],[ItemImgSize],[PropImgNum]
                                            ,[PropImgSize],[AutoRepost],[PromotedType],[StatusId],[LevelId]
                                            ,[AlipayBind],[Protection],[Avatar],[LiangPin],[SignFoods],[HasShop]
                                            ,[IsLightning],[HasSubStock],[GoldenSeller],[Subscribe],[VerMarket]
                                            ,[OnlineGaming],[EmailNum],[SMSNum],[Currency],[Validity],[InputDate]
                                            from tbClientUser where TbUserId={0} and UserNick='{1}'", TBUserId, UserNick);
            IList<tbClientUser> list = DBHelper.ExecuteIList<tbClientUser>(CommandType.Text, SqlStr);
            tbClientUser ClientUser = list != null ? list[0] : null;
            return ClientUser;
        }
    }
}
